# [str]: Path to game data (game) folder
game.data=./game

# [str]: Path to game settings (data) folder
game.settings=./save

# [bool (0/1)]: Enable file call monitoring
patch.hook_mon.file=0

# [bool (0/1)]: Enable file system related call monitoring
patch.hook_mon.fs=0

# [bool (0/1)]: Enable IO syscall monitoring
patch.hook_mon.io=0

# [bool (0/1)]: Enable any file/IO open call monitoring
patch.hook_mon.open=0

# [bool (0/1)]: Enable libusb call monitoring
patch.hook_mon.usb=0

# [str]: Path to library implementing the piubtn api for piubtn emulation
patch.piubtn.emu_lib=

# [str]: Path to library implementing the piuio api for piuio emulation
patch.piuio.emu_lib=

# [bool (0/1)]: Enable game exit on Test + Service
patch.piuio_exit.test_serv=0

# [str]: Bus and port (format: X-X, e.g. 1-2) of the USB slot to assign to Player 1 when a USB thumb drive is plugged in
patch.usb_profile.p1.bus_port=

# [str]: Bus and port (format: X-X, e.g. 1-2) of the USB slot to assign to Player 2 when a USB thumb drive is plugged in
patch.usb_profile.p2.bus_port=

# [str]: Device nodes of plugged in USB thumb drives to consider for mounting for usb profiles, format: sdX,sdY e.g. sde,sdf
patch.usb_profile.dev_nodes=

# [str]: Path to a library implementing the x11-input-handler api to capture X11 keyboard inputs
patch_x11_event_loop.input_handler_lib=

# [str]: Path to a second library implementing the x11-input-handler api to capture X11 keyboard inputs
patch_x11_event_loop.input_handler_lib2=

# [str]: Print the log output to the specified file
util.log.file=pumptools.log

# [int]: Set the log level (0-4)
util.log.level=4
